group 'io.crossingthestreams.flutterappauth'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

project.ext {
    minSdkVersion = 16
    compileSdkVersion = 33

    googleVersions = [
            glide                 : '4.12.0',
            material              : '1.3.0',
    ]

    androidXVersions = [
            annotation            : '1.2.0',
            appCompat             : '1.3.0',
            browser               : '1.3.0',
    ]

    okioVersion = '2.10.0'
    jodaVersion = '2.10.10'
}

try {
    def grgit = Grgit.open(currentDir: project.rootDir)
    def lastCommit = grgit.head()

    project.ext.versionNum = grgit.log(includes:['HEAD']).size()
    project.ext.versionName = grgit.describe()
    project.ext.versionDate = lastCommit.getDate()
    if (project.ext.versionName == null) {
        project.ext.versionName = 'DEV'
    }
} catch (Exception ignored) {
    project.ext.versionNum = 1
    project.ext.versionName = 'DEV'
    project.ext.versionDate = new Date()
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 31

    if (project.android.hasProperty("namespace")) {
        namespace 'io.crossingthestreams.flutterappauth'
    }


    defaultConfig {
        minSdkVersion 16
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    lint {
        disable 'InvalidPackage'
    }
}

dependencies {
    implementation project(path: ':library')
}

